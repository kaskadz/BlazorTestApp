@page "/user-info"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Security.Claims
@inject IAccessTokenProvider _accessTokenProvider

<AuthorizeView>
    <h1>User info</h1>
    
    <p>Login: @context.User.Identity.Name</p>
    <p>Identities: @(GetIdentitiesString(context.User.Identities))</p>
    <p>Claims: @(GetClaimsString(context.User.Claims))</p>
    <p>Token: @Token</p>
</AuthorizeView>

@code {
    public string Token { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AccessTokenResult accessTokenResult = await _accessTokenProvider.RequestAccessToken();
        if (accessTokenResult != null)
        {
            Token = accessTokenResult.TryGetToken(out AccessToken token)
                ? token?.Value
                : "no token";
        }
    }

    private static string GetIdentitiesString(IEnumerable<ClaimsIdentity> claimsIdentities)
    {
        return string.Join("; ", claimsIdentities.Select(x => x.Name));
    }
    
    private static string GetClaimsString(IEnumerable<Claim> claims)
    {
        return string.Join("; ", claims.Select(x => $"{x.Type}:{x.Value}"));
    }
}